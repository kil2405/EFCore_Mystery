// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MysteryBox.Api.Data;

#nullable disable

namespace MysteryBox.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MysteryBox.Api.Models.Game.ClickCountLog", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<long>("LogDate")
                        .HasColumnType("bigint")
                        .HasColumnName("log_date");

                    b.Property<int>("ClickCount")
                        .HasColumnType("int")
                        .HasColumnName("click_count");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("TotalCount")
                        .HasColumnType("bigint")
                        .HasColumnName("total_count");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("UserId", "LogDate");

                    b.ToTable("tb_click_count_log", (string)null);
                });

            modelBuilder.Entity("MysteryBox.Api.Models.Game.GlobalRanking", b =>
                {
                    b.Property<string>("Region")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("region");

                    b.Property<long>("Count")
                        .HasColumnType("bigint")
                        .HasColumnName("count");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Region");

                    b.ToTable("tb_global_ranking", (string)null);
                });

            modelBuilder.Entity("MysteryBox.Api.Models.Game.GoldAcqLog", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<long>("LogDate")
                        .HasColumnType("bigint")
                        .HasColumnName("log_date");

                    b.Property<int>("AddValue")
                        .HasColumnType("int")
                        .HasColumnName("add_value");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("TotalValue")
                        .HasColumnType("bigint")
                        .HasColumnName("total_value");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("UserId", "LogDate");

                    b.ToTable("tb_gold_acq_log", (string)null);
                });

            modelBuilder.Entity("MysteryBox.Api.Models.Game.ItemAcqLog", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<long>("LogDate")
                        .HasColumnType("bigint")
                        .HasColumnName("log_date");

                    b.Property<int>("AddCount")
                        .HasColumnType("int")
                        .HasColumnName("add_count");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("UserId", "LogDate");

                    b.ToTable("tb_item_acq_log", (string)null);
                });

            modelBuilder.Entity("MysteryBox.Api.Models.Game.ItemReward", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int>("AppearNum")
                        .HasColumnType("int")
                        .HasColumnName("appear_num");

                    b.Property<long>("Count")
                        .HasColumnType("bigint")
                        .HasColumnName("count");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsReward")
                        .HasColumnType("bit(1)")
                        .HasColumnName("is_reward");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("UserId", "AppearNum");

                    b.ToTable("tb_item_reward", (string)null);
                });

            modelBuilder.Entity("MysteryBox.Api.Models.Game.RewardGold", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("Gold")
                        .HasColumnType("int")
                        .HasColumnName("gold");

                    b.Property<long>("RewardTime")
                        .HasColumnType("bigint")
                        .HasColumnName("reward_time");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("UserId");

                    b.ToTable("tb_reward_gold", (string)null);
                });

            modelBuilder.Entity("MysteryBox.Api.Models.Game.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("ClickCount")
                        .HasColumnType("bigint")
                        .HasColumnName("click_count");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("device_id");

                    b.Property<long>("Gold")
                        .HasColumnType("bigint")
                        .HasColumnName("gold");

                    b.Property<string>("Nickname")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("nickname");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("region");

                    b.Property<bool>("TermsAgree")
                        .HasColumnType("bit(1)")
                        .HasColumnName("terms_agree");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId")
                        .IsUnique();

                    b.HasIndex("Nickname");

                    b.ToTable("tb_user", (string)null);
                });

            modelBuilder.Entity("MysteryBox.Api.Models.Game.UserConnectLog", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<long>("LogDate")
                        .HasColumnType("bigint")
                        .HasColumnName("log_date");

                    b.Property<string>("Country")
                        .HasColumnType("longtext")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Ip")
                        .HasColumnType("longtext")
                        .HasColumnName("ip");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("UserId", "LogDate");

                    b.ToTable("tb_user_connect_log", (string)null);
                });

            modelBuilder.Entity("MysteryBox.Api.Models.Game.UserItem", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("item_id");

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsEquip")
                        .HasColumnType("bit(1)")
                        .HasColumnName("is_equip");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("UserId", "ItemId");

                    b.ToTable("tb_user_item", (string)null);
                });

            modelBuilder.Entity("MysteryBox.Api.Models.Game.UserConnectLog", b =>
                {
                    b.HasOne("MysteryBox.Api.Models.Game.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MysteryBox.Api.Models.Game.UserItem", b =>
                {
                    b.HasOne("MysteryBox.Api.Models.Game.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
